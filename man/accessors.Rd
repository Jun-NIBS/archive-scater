% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/SingleCellExperiment-methods.R
\docType{methods}
\name{norm_exprs}
\alias{norm_exprs}
\alias{norm_exprs<-}
\alias{stand_exprs}
\alias{stand_exprs<-}
\alias{fpkm}
\alias{fpkm<-}
\alias{accessors counts exprs normcounts logcounts norm_exprs stand_exprs tpm cpm fpkm}
\alias{GET_FUN}
\alias{exprs}
\alias{exprs,SingleCellExperiment-method,}
\alias{exprs<-,SingleCellExperiment,matrix-method}
\title{Accessors for the typical elements of a SingleCellExperiment object.}
\usage{
norm_exprs(object)

norm_exprs(object) <- value

stand_exprs(object)

stand_exprs(object) <- value

fpkm(object)

fpkm(object) <- value

GET_FUN(exprs_values)
}
\arguments{
\item{object}{a \code{SingleCellExperiment} object.}

\item{value}{an integer matrix (e.g. for \code{counts}), numeric matrix (e.g.
for \code{exprs}) or logical matrix}

\item{exprs_values}{character(1), type of expression values for which 
convenience accessors are provided. Namely: "exprs", norm_exprs", "stand_exprs", "fpkm".
The following are imported from \code{\link{SingleCellExperiment}}: "counts",
"normcounts", "logcounts", "cpm", "tpm".}
}
\value{
a matrix of normalised expression data

a matrix of standardised expressiond data

a matrix of FPKM values

A matrix of numeric, integer or logical values.
}
\description{
Convenience function to access commonly-used assays (counts, exprs, etc) of the 
\code{\link{SingleCellExperiment}} object.
}
\details{
\code{exprs} values are typically log2-scaled (normalised) 
counts-per-million values.
}
\examples{
data("sc_example_counts")
data("sc_example_cell_info")
example_sce <- SingleCellExperiment(
assays = list(counts = sc_example_counts), colData = sc_example_cell_info)

exprs(example_sce) <- log2(calculateCPM(example_sce, use.size.factors = FALSE) + 1)

example_sce <- SingleCellExperiment(
assays = list(norm_counts = sc_example_counts), colData = sc_example_cell_info)

counts(example_sce) <- sc_example_counts
norm_exprs(example_sce) <- log2(calculateCPM(example_sce, use.size.factors = FALSE) + 1)

stand_exprs(example_sce) <- log2(calculateCPM(example_sce, use.size.factors = FALSE) + 1)

tpm(example_sce) <- calculateTPM(example_sce, effective_length = 5e4)

cpm(example_sce) <- calculateCPM(example_sce, use.size.factors = FALSE)

fpkm(example_sce)
}
\author{
Davis McCarthy
}
